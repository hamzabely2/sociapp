name: Build and deploy Node.js app to Azure Web App - frontsociapp

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code source depuis le dépôt GitHub
      - uses: actions/checkout@v4

      # Étape 2 : Configurer la version de Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Étape 3 : Installer les dépendances et construire l'application
      - name: npm install, build, and test
        run: |
          cd front
          npm install
          NODE_OPTIONS=--openssl-legacy-provider CI=false npm run build --if-present
          CI=false npm run test --if-present

      # Étape 4 : Zipper les fichiers de build pour les déployer
      - name: Zip artifact for deployment
        run: |
          cd front/build
          zip -r ../../release.zip .

      # Étape 5 : Uploader l'artefact pour l'étape de déploiement
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # Étape 6 : Télécharger l'artefact depuis l'étape de build
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # Étape 7 : Décompresser l'artefact pour le déploiement
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Étape 8 : Se connecter à Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Étape 9 : Déployer sur Azure Web App
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'frontsociapp'
          slot-name: 'Production'
          package: .

      # Étape 10 : Valider le déploiement en vérifiant l'URL
      - name: Validate deployment
        run: |
          curl -I ${{ steps.deploy-to-webapp.outputs.webapp-url }} || exit 1
